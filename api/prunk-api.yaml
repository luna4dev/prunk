openapi: 3.1.1
info:
  title: Prunk Service API
  description: Backend API service for Prunk.io - Go HTTP API replacing Node.js/Serverless backend
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8010
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security: []

paths:
  /:
    get:
      summary: Root endpoint
      description: Simple root endpoint confirmation
      operationId: root
      responses:
        '200':
          description: Service is running
          content:
            text/plain:
              schema:
                type: string
                example: "Data Service is running!"

  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/HealthResponse'

  /user:
    get:
      tags:
        - User
      summary: Get current user information
      description: Returns information about the currently authenticated user
      operationId: getCurrentUser
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/User'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'

  /user/search:
    get:
      tags:
        - User
      summary: Search users (autocomplete)
      description: Search users by keyword with pagination for autocomplete functionality
      operationId: searchUsers
      security:
        - BearerAuth: []
      parameters:
        - name: keyword
          in: query
          required: true
          description: Search keyword to match against user email or other fields
          schema:
            type: string
            example: "john"
        - name: page_size
          in: query
          required: false
          description: Number of results to return per page (default 10, max 50)
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
            example: 10
        - name: page_key
          in: query
          required: false
          description: Last key from previous page for cursor-based pagination
          schema:
            type: string
            example: "user_123456789"
      responses:
        '200':
          description: Search results with pagination
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/UserSearchResponse'
        '400':
          description: Bad request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'

  /project:
    get:
      tags:
        - Project
      summary: List user projects
      description: Returns projects that the authenticated user owns or participates in
      operationId: listProjects
      security:
        - BearerAuth: []
      parameters:
        - name: page_size
          in: query
          required: false
          description: Number of results to return per page (default 10, max 50)
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
            example: 10
        - name: page_key
          in: query
          required: false
          description: Last key from previous page for cursor-based pagination
          schema:
            type: string
            example: "project_123456789"
      responses:
        '200':
          description: List of user projects with pagination
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/ProjectListResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'

    post:
      tags:
        - Project
      summary: Create new project
      description: Creates a new project for the authenticated user
      operationId: createProject
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './prunk-schema.yaml#/components/schema/CreateProjectRequest'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Project'
        '400':
          description: Bad request - Invalid project data
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'

  /project/{project_id}:
    get:
      tags:
        - Project
      summary: Get project details with folder structure
      description: Returns project details and nested folder structure for the authenticated user
      operationId: getProject
      security:
        - BearerAuth: []
      parameters:
        - name: project_id
          in: path
          required: true
          description: The unique identifier of the project
          schema:
            type: string
            example: "project_123456789"
      responses:
        '200':
          description: Project details with folder structure
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/ProjectDetailsResponse'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '403':
          description: Forbidden - User does not have access to this project
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './prunk-schema.yaml#/components/schema/Error'